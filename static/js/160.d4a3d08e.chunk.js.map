{"version":3,"file":"static/js/160.d4a3d08e.chunk.js","mappings":"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","sources":["API.js","components/TeacherItem/TeacherItem.jsx","components/TeachersList/TeachersList.jsx","pages/Teachers.jsx"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, onAuthStateChanged } from \"firebase/auth\";\nimport { doc, getFirestore, setDoc } from \"firebase/firestore\";\nimport { getDatabase, ref, get } from \"firebase/database\";\n\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCE4tj95wUXbVIlgSSBBlYt1z8SPGVGQ1Y\",\n  authDomain: \"learnlingo-96756.firebaseapp.com\",\n  databaseURL: \"https://learnlingo-96756-default-rtdb.europe-west1.firebasedatabase.app\",\n  projectId: \"learnlingo-96756\",\n  storageBucket: \"learnlingo-96756.appspot.com\",\n  messagingSenderId: \"316232366791\",\n  appId: \"1:316232366791:web:fd1a298b0573cacb079ce2\"\n};\n\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst db = getFirestore(app);\nconst database = getDatabase(app);\n\nexport const handleRegistration = async ({name,email,password}) => {\n    try {\n        const createUser = await createUserWithEmailAndPassword(auth, email, password);\n        const user = createUser.user;\n\n        const userDocRef = doc(db, 'users', user.uid);\n        await setDoc(userDocRef, { name: name, email: email });\n        console.log('Successfully', user);\n    } catch (error) {\n        console.error('Failed', error.message);\n    }\n}\n\nexport const handleLogIn = async(values) => {\n    const { email, password } = values;\n    try {\n        await signInWithEmailAndPassword(auth, email, password);\n        console.log('User logged in successfully');\n    } catch (error) {\n        console.error('Login failed:', error.message);\n    }\n\n}\n\nonAuthStateChanged(auth, (user) => {\n    if (user) {\n        console.log('User is signed in:', user.uid);\n    // Відобразіть зміст для автентифікованого користувача\n  } else {\n    console.log('No user is signed in.');\n    // Відобразіть зміст для неавтентифікованого користувача\n  }\n})\n\nexport const getTeachersList = async () => {\n    const getRef = ref(database);\n    const getList = await get(getRef);\n\n    if (getList.exists()) {\n        return getList.val();\n    } else {\n        console.log('No data');\n    }\n    \n}","\n\nexport const TeacherItem = ({item}) => {\n\n    return (\n        <li>\n            <div>\n                <img src={item.avatar_url} alt='Teacher' />\n            </div>\n            <div>\n                <div>\n                    <p>Languages</p>\n                    <ul>\n                        <li>Lessons online</li>\n                        <li>Lessons done: {item.lessons_done}</li>\n                        <li>Rating: { item.rating}</li>\n                        <li>Price / 1 hour: {item.price_per_hour}$</li>\n                    </ul>\n                    <button type='button'>+</button>\n                </div>\n                <div>\n                    <h2>{item.name} {item.surname}</h2>\n                    <ul>\n                        <li>Speaks: \n                            <ul>\n                                {item.languages.map((language, index) => (\n                                    <li key={index}>\n                                        {language}\n                                        {index < item.languages.length - 1 && ','}\n                                    </li>\n                                ))}\n                            </ul>\n                        </li>\n                        <li>Lesson Info: { item.lesson_info}</li>\n                        <li>Conditions: \n                            <ul>\n                                {item.conditions.map((condition,index) => (\n                                    <li key={index}>\n                                        {condition}\n                                    </li>\n                                ))}\n                            </ul>\n                        </li>\n                    </ul>\n                    <button type=\"button\">Read more</button>\n                    <ul>\n                        {item.levels.map((lev,index) => (<li key={index}># {lev}</li>))}\n                    </ul>\n                </div>\n            </div>\n        </li>\n    )\n}","import { useEffect, useState } from \"react\";\n\nimport { getTeachersList } from \"../../API\";\nimport { TeacherItem } from \"components/TeacherItem/TeacherItem\";\n\nexport const TeachersList = () => {\n    const [teachersList, setTeachersList] = useState([]);\n\n    useEffect(() => {\n        const addList = async () => {\n            try {\n                const teachers = await getTeachersList();\n                setTeachersList(teachers);\n            } catch (error) {\n                console.log('something wrong');\n            }\n        }\n        addList();\n    }, []);\n    console.log(teachersList);\n    return (\n        <ul>\n            {teachersList.map((item) => (\n                <li key={item.lesson_done}>\n                    <TeacherItem item={ item} />\n                </li>\n            ))}\n    \n        </ul>\n    )\n}","import { TeachersList } from \"components/TeachersList/TeachersList\";\n\nconst Teachers = () => {\n    return (\n        <TeachersList/>\n    );\n}\n\nexport default Teachers;"],"names":["app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","db","getFirestore","database","getDatabase","handleRegistration","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","_ref","name","email","password","createUser","user","userDocRef","_context","prev","next","createUserWithEmailAndPassword","sent","doc","uid","setDoc","console","log","t0","error","message","stop","_x","apply","arguments","handleLogIn","_ref3","_callee2","values","_context2","signInWithEmailAndPassword","_x2","onAuthStateChanged","getTeachersList","_ref4","_callee3","getRef","getList","_context3","ref","get","exists","abrupt","val","TeacherItem","item","_jsxs","children","_jsx","src","avatar_url","alt","lessons_done","rating","price_per_hour","type","surname","languages","map","language","index","length","lesson_info","conditions","condition","levels","lev","TeachersList","_useState","useState","_useState2","_slicedToArray","teachersList","setTeachersList","useEffect","addList","teachers","lesson_done"],"sourceRoot":""}